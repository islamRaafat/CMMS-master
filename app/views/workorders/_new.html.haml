= form_for @workorder, :html => { :class => "form-horizontal container-fluid", :multipart => true } do |f|
  .row-fluid
    %fieldset
      %legend General Info
      .control-group
        = f.label :wo_type_id, nil, { :class => "control-label" }
        .controls= f.select :wo_type_id, 
                            Workorder.get_map(:wo_type).map{|m| [m[:val].to_s.split("_").map(&:camelize).join(" "), m[:key]] }, 
                            {},
                            { :disabled => "disabled" }
      .control-group
        = f.label :priority_id, nil, { :class => "control-label" }
        .controls= f.select :priority_id, 
          workorder.get_map(:priority).map{|m| [m[:val].to_s.split("_").map(&:camelize).join(" "), m[:key]] },
          {}, { :disabled => "disabled" }

      .control-group
        = f.label :asset_id, "Asset", { :class => "control-label" }
        .controls= f.select :asset_id, 
                  Asset.all.map{|a| [a.name, a.id] },
                  {}, { :disabled => "disabled" }
      .control-group.info
        = f.label :description, nil, { :class => "control-label" }
        .controls= f.text_area :description, { :rows => 3, :class => "input-xxlarge", :disabled => "disabled" }
      .control-group.warning
        = f.label :asset_note, nil, { :class => "control-label" }
        .controls= f.text_area :asset_note, :required => true, :rows => 3, :class => "input-xxlarge"
      .control-group
        = f.label :assigned_to_id, nil, { :class => "control-label" }
        .controls= f.select :assigned_to_id, 
                  User.all.map{|u| [u.fullname, u.id] }, 
                  {}, { :disabled => "disabled" } # TODO user
      .control-group
        = f.label :time_needed, nil, { :class => "control-label" }
        .controls= f.text_field :time_needed, { :disabled => true }
      .control-group
        = f.label :workflow_state, nil, { :class => "control-label" }
        .controls= f.select :workflow_state, @workorder.current_state.events.keys.map{|e| [e.to_s.humanize, e]}
      = fields_for "workorder[state_logs_attributes][]", @workorder.state_logs.new do |sl|
        = sl.hidden_field :workorder_id
        = sl.hidden_field :changed_by_id, :value => current_user.id
        = sl.hidden_field :from_wf_state, :value => @workorder.current_state.to_s
        .control-group
          = sl.label :comment, nil, { :class => "control-label" }
          .controls= sl.text_area :comment, :rows => 3
  .row-fluid
    .form-actions
      = f.submit "Submit Action", :disable_with => "loading ...", :class => "btn btn-primary" 
      = link_to "Cancel", :back 

